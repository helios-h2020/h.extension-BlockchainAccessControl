apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: "com.github.johnrengelman.shadow"

group = "com.worldline.backend"
version = "0.0.1"

mainClassName = "io.ktor.server.netty.EngineMain"

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

dependencies {
    def ktor_version = "1.5.0"
    def exposed_version = "0.29.1"
    def sqlite_version = "3.34.0"

    implementation fileTree(dir: '../accesscontrol/build/libs', include: '*.jar')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.4.30"

    implementation project(":accesscontrol")

    implementation "ch.qos.logback:logback-classic:1.2.3"

    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "io.ktor:ktor-server-servlet:$ktor_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-auth:$ktor_version"
    implementation "io.ktor:ktor-auth-jwt:$ktor_version"
    implementation "io.ktor:ktor-gson:$ktor_version"
    implementation "io.ktor:ktor-server-servlet:$ktor_version"

    implementation "io.ktor:ktor-client-okhttp:$ktor_version"
    implementation "io.ktor:ktor-client-json:$ktor_version"
    implementation "io.ktor:ktor-client-gson:$ktor_version"
    implementation "io.ktor:ktor-client-logging:$ktor_version"


    implementation "com.google.api-client:google-api-client:1.30.9"

    implementation("org.jetbrains.exposed:exposed-core:$exposed_version")
    implementation("org.jetbrains.exposed:exposed-dao:$exposed_version")
    implementation("org.jetbrains.exposed:exposed-jdbc:$exposed_version")
    implementation "org.xerial:sqlite-jdbc:$sqlite_version"

    // implementation "com.google.cloud:google-cloud-firestore:2.1.0"
    // implementation(Dependencies.Backend.gcplog)
    // testImplementation("io.ktor:ktor-server-tests:${Versions.kotlin}")
}

jar {
    manifest {
        attributes(
                "Class-Path": configurations.compile.collect { it.getName() }.join(" "),
                "Main-Class": mainClassName
        )
    }
}

shadowJar {
    mergeServiceFiles()
}